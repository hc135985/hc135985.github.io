import{_ as n,c as s,o as a,d as t}from"./app.58b68d53.js";const h='{"title":"\u8BB0\u5F55\u4E00\u4E9B\u5E38\u7528\u65B9\u6CD5","description":"","frontmatter":{},"headers":[{"level":2,"title":"js","slug":"js"},{"level":3,"title":"\u5B57\u7B26\u4E32\u957F\u5EA6\u533A\u5206\u5168\u89D2\u534A\u89D2","slug":"\u5B57\u7B26\u4E32\u957F\u5EA6\u533A\u5206\u5168\u89D2\u534A\u89D2"},{"level":2,"title":"taro","slug":"taro"},{"level":3,"title":"\u51FD\u6570\u7EC4\u4EF6\u83B7\u53D6\u8282\u70B9\u5C3A\u5BF8","slug":"\u51FD\u6570\u7EC4\u4EF6\u83B7\u53D6\u8282\u70B9\u5C3A\u5BF8"}],"relativePath":"pages/utils.md","lastUpdated":1649324904866}',p={},e=t(`<h1 id="\u8BB0\u5F55\u4E00\u4E9B\u5E38\u7528\u65B9\u6CD5" tabindex="-1">\u8BB0\u5F55\u4E00\u4E9B\u5E38\u7528\u65B9\u6CD5 <a class="header-anchor" href="#\u8BB0\u5F55\u4E00\u4E9B\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a></h1><h2 id="js" tabindex="-1">js <a class="header-anchor" href="#js" aria-hidden="true">#</a></h2><h3 id="\u5B57\u7B26\u4E32\u957F\u5EA6\u533A\u5206\u5168\u89D2\u534A\u89D2" tabindex="-1">\u5B57\u7B26\u4E32\u957F\u5EA6\u533A\u5206\u5168\u89D2\u534A\u89D2 <a class="header-anchor" href="#\u5B57\u7B26\u4E32\u957F\u5EA6\u533A\u5206\u5168\u89D2\u534A\u89D2" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">strLength</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token function">clearHtml</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\u0000-\\u00ff]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>
    text
      <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">===</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">next<span class="token punctuation">,</span> prev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>next <span class="token operator">+=</span> prev<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="taro" tabindex="-1">taro <a class="header-anchor" href="#taro" aria-hidden="true">#</a></h2><h3 id="\u51FD\u6570\u7EC4\u4EF6\u83B7\u53D6\u8282\u70B9\u5C3A\u5BF8" tabindex="-1">\u51FD\u6570\u7EC4\u4EF6\u83B7\u53D6\u8282\u70B9\u5C3A\u5BF8 <a class="header-anchor" href="#\u51FD\u6570\u7EC4\u4EF6\u83B7\u53D6\u8282\u70B9\u5C3A\u5BF8" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">selectorQueryDom</span> <span class="token operator">=</span> <span class="token parameter">selector</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> query <span class="token operator">=</span> Taro<span class="token punctuation">.</span><span class="token function">createSelectorQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  query<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">boundingClientRect</span><span class="token punctuation">(</span><span class="token parameter">rec</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">res</span><span class="token punctuation">(</span>rec<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,7),o=[e];function c(u,l,r,i,k,d){return a(),s("div",null,o)}var f=n(p,[["render",c]]);export{h as __pageData,f as default};
